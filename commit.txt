23. IP адрес 169.254.169.254

надо запомнить IP адрес 169.254.169.254
прочитать инфу про сервер 
Linux: curl http://169.254.169.254/latest/meta-data
Записать данные: a=`curl http://169.254.169.254/latest/meta-data/placement/availability-zone`

Windows: пройти по ссылке в браузере http://169.254.169.254/latest/meta-data 


24. Elastic Load Balancer основы архитектуры

Создаем сервера (например 3 шт)
Classic LB (получает реквест и отсылает его всем серверам, которыее подключены к нему) 
(в Application LB можно создавать target группы (http, https))
(Network LB тоже самое что и APB, + можно отконфигур на разные порты, используя ДНС нейм (net) отослать запрос на определенный сервер, если 
(com), то на другой )

идем в Load Balancers > Create Load Balancers > Classic LB 

Step.1 Define LB
1. прописываем имя
2. выбираем сеть 
3. Create an internal LB (если выбрать не будет доступа в интернет)
4. Enable advanced VPC Configuration: "v" уточнить на какие сервера будет отправлять (на зоны)
5. Listener Configuration (на каком порте будет слушаться данный LB)

Step.2 Assign Security Groups

Step.3 пропускаем

Step.4 Configure Health Check будет проверять сервера, живые они или нет

Step.5 Add EC2 Instances добавляем наши инстансы в LB
Enable Cross-Zone LB выбираем всегда, иначе будет отправлять только на один сервер
Enable Connection Draining (поддерживать конект в течении какого то времени)

SQS - Simple Queue Service - Самый первый сервис AWS

"Decouple" - разъединение компонентов системы
Standart Queue - при операции Pull не гарантировано FIFO - First in First output

{ Но чтобы FIFO было бесплатным в Standart Queue, добавьте в сообщение Index код.
И при Pull, проверяйте что после сообщения с номеров 3 вы получили сообщение с номеров 4, если нет, то делать еще раз Pull. }

FIFO Queue - при операции Pull, гарантирует FIFO, только это стоит дороже.
Размер сообщений ограничен 256kB

В SQS есть :

        Producers - тот кто генерирует сообщения в SQS

        Consumers - тот кто их берет из SQS и обрабатывает


* Pull Based System - система вытаскивания сообщений

* 256KB - масимальный размер сообщения

* Retention period - срок хранения сообщений в очереди, от 1 мин до 14 дней. По-умолчанию 4 дня.

* Visibility TimeOut - время, за которое исчезает сообщение из очереди после того, как его вытащили. Если не было подтверждения, 
что сообщение обработано (DeleteMessage) в это время, то оно опять появится в очереди.
Меняется командой " ChangeMessageVisibility". Максимум 12 часов, по умолчанию 30 сек.

* Long Polling - задержка проверки новых сообщений в очереди, макс 20сек.

* InFlight Messages in Standart Queue = 120.000 шт

* InFlight Messages in FIFO Queue = 20.000 шт

* Dead-Letter Queue - сообщения которые получается обработать.

* Когда в вопросах спрашивают о Decouple компонентах, ответ Amazone SQS. 

================================================================================================================================

HTTP/https

HTTP - HyperText Transfer Protocol

HTTPS - HyperText Transfer Protocol Secure - HTTPS = HTTP + SSL/TLS

SSL - Secure Socket Layer

TLS - Transport Layer Security

SSL Termination - расшифровка

=================================================================================================================================

CloudTrail - записывает практически все события которые происходят на вашем AWS аккаунте во всех регионах, чтобы нвйти виновника 
или узнать кто и что делал.

=================================================================================================================================

Elastic Beanstalk - позволяет очень быстро поднять инфраструктуру для вашего WEB приложения. Так же очень быстро и легко обновляет 
ваш код включая возврат на предыдущую версию - Rollback

Так же дает возможность легко выполнять DevOps Green/Blue Deployment метод.

поддерживает следующие платформы:

* Java
* .Net
* PHP
* Node.js
* Pyton
* Ruby
* Go
* Docker

================================================================================================================================

.ebextensions - *.confid файлы настроек в деректории .ebextensions позволяют делать полную кастомизацию инфраструктуры для
Elastic Beanstalk.

Файлы должны быть с расширением .confid  и начинаться с номеровки типа 01, 02 и тд

в деректории сервиса создается папка/деректория .ebextensions

Файлы пишутся на yaml или json

https://docs.aws.amazon.com/Elasticbeanstalk/latest/dg/ebextensions.html - вся документация

Группы команд в config файлах

* packages - скачать и инсталировать программы (yum, rpm, msi)
* sources - скачать архив из инета и распаковать его (tar, gzip, zip)
* files - создать файлы (можно скачать используя source)
* users - создать пользователей только на Linux
* groups - создать группы только на Linux
* commands - запустить системные команды перед распаковкой zip файла
* container_commands - запустить системные команды после распаковки     
* services - стоп, старт сервисов
* Resourses - создание дополнительных ресурсов AWS


